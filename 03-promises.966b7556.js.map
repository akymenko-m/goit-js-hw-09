{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAWC,SAASC,cAAc,SAIxC,SAASC,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAE3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAG5BA,EAAM,G,CA0Bb,SAASO,IAOP,MANmB,CACjBP,MAAOQ,OAAOb,EAASc,SAAS,GAAGC,OACnCC,KAAMH,OAAOb,EAASc,SAAS,GAAGC,OAClCE,OAAOJ,OAAOb,EAASc,SAAS,GAAGC,O,CAMvC,SAASG,GAAUd,SAAEA,EAAQC,MAAEA,IAC7BP,EAAAqB,OAAOC,QAAQ,uBAAqBhB,QAAiBC,M,CAIvD,SAASgB,GAAQjB,SAAEA,EAAQC,MAAEA,IAC3BP,EAAAqB,OAAOG,QAAQ,sBAAoBlB,QAAiBC,M,CAnCtDL,EAASuB,iBAAiB,UAE1B,SAA0BC,GACxBA,EAAMC,iBAEN,IAAIpB,MAAEA,EAAKW,KAAEA,EAAIC,OAAEA,GAAUL,IAG7B,IAAK,IAAIc,EAAI,EAAGA,GAAKT,EAAQS,GAAK,EAChCvB,EAAcuB,EAAGrB,GAAOsB,KAAKT,GAAWU,MAAMP,GAG9ChB,GAASW,EAEXhB,EAAS6B,O,IAIX7B,EAASuB,iBAAiB,QAASX","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formData = document.querySelector('.form');\n// console.log(refs.form.elements);\n\n\nfunction createPromise(position, delay) {\n\n  return new Promise((resolve, reject) => {\n    \n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n        // resolve(console.log(`✅ Fulfilled promise ${position} in ${delay}ms`));\n      } else {\n        reject({ position, delay });\n        // reject(console.log(`❌ Rejected promise ${position} in ${delay}ms`));\n      }\n    }, delay);\n    \n  });\n  \n}\n\n\nformData.addEventListener('submit', onCreatePromises);\n\nfunction onCreatePromises(event) {\n  event.preventDefault();\n  // const formData = getDataValues();\n  let { delay, step, amount} = getDataValues();\n  // console.log({ delay, step, amount });\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay).then(onSuccess).catch(onError);\n    // createPromise(i, delay);\n\n    delay += step;\n  }\n  formData.reset();\n}\n\n\nformData.addEventListener('input', getDataValues);\nfunction getDataValues() {\n  const dataValues = {\n    delay: Number(formData.elements[0].value),\n    step: Number(formData.elements[1].value),\n    amount:Number(formData.elements[2].value),\n  };\n  // console.log(dataValues);\n  return dataValues;\n}\n\nfunction onSuccess({ position, delay }) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\n\nfunction onError({ position, delay }) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n};\n\n\n// function resetFormData() {\n//   formData.reset();\n// }\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formData","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$47d4ff9957288465$var$getDataValues","Number","elements","value","step","amount","$47d4ff9957288465$var$onSuccess","Notify","success","$47d4ff9957288465$var$onError","failure","addEventListener","event","preventDefault","i","then","catch","reset"],"version":3,"file":"03-promises.966b7556.js.map"}