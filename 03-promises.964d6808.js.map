{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAWC,SAASC,cAAc,SAIxC,SAASC,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAE3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAGpBA,E,IA0BP,SAASO,IAOP,MANmB,CACjBP,MAAOQ,OAAOb,EAASc,SAAS,GAAGC,OACnCC,KAAMH,OAAOb,EAASc,SAAS,GAAGC,OAClCE,OAAOJ,OAAOb,EAASc,SAAS,GAAGC,O,CAMvC,SAASG,EAAUC,G,IAAEf,EAAFe,EAAEf,SAAUC,EAAZc,EAAYd,MAC7BP,EAAAsB,OAAOC,QAAQ,uBAAwCC,OAAflB,EAAS,QAAYkB,OAANjB,EAAM,M,CAI/D,SAASkB,EAAQJ,G,IAAEf,EAAFe,EAAEf,SAAUC,EAAZc,EAAYd,MAC3BP,EAAAsB,OAAOI,QAAQ,sBAAuCF,OAAflB,EAAS,QAAYkB,OAANjB,EAAM,M,CAnC9DL,EAASyB,iBAAiB,UAE1B,SAA0BC,GACxBA,EAAMC,iBAKN,IAHA,IAA6BC,EAAAhB,IAAvBP,EAAuBuB,EAAvBvB,MAAOW,EAAgBY,EAAhBZ,KAAMC,EAAUW,EAAVX,OAGVY,EAAI,EAAGA,GAAKZ,EAAQY,GAAK,EAChC1B,EAAc0B,EAAGxB,GAAOyB,KAAKZ,GAAWa,MAAMR,GAG9ClB,GAASW,EAEXhB,EAASgC,O,IAIXhC,EAASyB,iBAAiB,QAASb,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formData = document.querySelector('.form');\n// console.log(refs.form.elements);\n\n\nfunction createPromise(position, delay) {\n\n  return new Promise((resolve, reject) => {\n    \n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n        // resolve(console.log(`✅ Fulfilled promise ${position} in ${delay}ms`));\n      } else {\n        reject({ position, delay });\n        // reject(console.log(`❌ Rejected promise ${position} in ${delay}ms`));\n      }\n    }, delay);\n    \n  });\n  \n}\n\n\nformData.addEventListener('submit', onCreatePromises);\n\nfunction onCreatePromises(event) {\n  event.preventDefault();\n  // const formData = getDataValues();\n  let { delay, step, amount} = getDataValues();\n  // console.log({ delay, step, amount });\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay).then(onSuccess).catch(onError);\n    // createPromise(i, delay);\n\n    delay += step;\n  }\n  formData.reset();\n}\n\n\nformData.addEventListener('input', getDataValues);\nfunction getDataValues() {\n  const dataValues = {\n    delay: Number(formData.elements[0].value),\n    step: Number(formData.elements[1].value),\n    amount:Number(formData.elements[2].value),\n  };\n  // console.log(dataValues);\n  return dataValues;\n}\n\nfunction onSuccess({ position, delay }) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\n\nfunction onError({ position, delay }) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n};\n\n\n// function resetFormData() {\n//   formData.reset();\n// }\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formData","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$ce04d3a99e08e73b$var$getDataValues","Number","elements","value","step","amount","$ce04d3a99e08e73b$var$onSuccess","param","Notify","success","concat","$ce04d3a99e08e73b$var$onError","failure","addEventListener","event","preventDefault","ref","i","then","catch","reset"],"version":3,"file":"03-promises.964d6808.js.map"}